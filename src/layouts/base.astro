---
import type { CollectionEntry } from 'astro:content'
import SEO from '../components/seo.astro'
import SideMenu from '../components/sidemenu.astro'

export interface Props {
  frontmatter:
    | CollectionEntry<'pages'>['data']
    | CollectionEntry<'region'>['data']
    | CollectionEntry<'partner'>['data']
}

const { frontmatter } = Astro.props
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" href={`${import.meta.env.BASE_URL}favicon.ico`} sizes="any" />
    <link rel="icon" href={`${import.meta.env.BASE_URL}favicon.svg`} type="image/svg+xml" />
    <link rel="apple-touch-icon" href={`${import.meta.env.BASE_URL}apple-touch-icon.png`} />
    <link rel="manifest" href={`${import.meta.env.BASE_URL}site.webmanifest`} />
    <link rel="sitemap" href={`${import.meta.env.BASE_URL}sitemap-index.xml`} />
    <SEO frontmatter={frontmatter} />
    <meta name="generator" content={Astro.generator} />
    <title>{frontmatter.title}</title>
    <meta name="description" content={frontmatter.description} />
    <script>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      if (
        localStorage.getItem('color-theme') === 'dark' ||
        (!('color-theme' in localStorage) &&
          window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        document.documentElement.classList.add('dark')
      } else {
        document.documentElement.classList.remove('dark')
      }
    </script>
    <style is:inline>
      [x-cloak] {
        display: none !important;
      }
    </style>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2042064965368789"
     crossorigin="anonymous"></script>
    <slot name="in-head" />
  </head>
  <body>
    <div class="bg-gray-50 antialiased dark:bg-gray-900">
      <SideMenu />
      <slot />
    </div>
    <script src="../../node_modules/flowbite/dist/flowbite.js"></script>
    <script>
      var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon')
      var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon')

      // Change the icons inside the button based on previous settings
      if (
        localStorage.getItem('color-theme') === 'dark' ||
        (!('color-theme' in localStorage) &&
          window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        themeToggleLightIcon!.classList.remove('hidden')
      } else {
        themeToggleDarkIcon!.classList.remove('hidden')
      }

      var themeToggleBtn = document.getElementById('theme-toggle')

      themeToggleBtn!.addEventListener('click', function () {
        // toggle icons inside button
        themeToggleDarkIcon!.classList.toggle('hidden')
        themeToggleLightIcon!.classList.toggle('hidden')

        // if set via local storage previously
        if (localStorage.getItem('color-theme')) {
          if (localStorage.getItem('color-theme') === 'light') {
            document.documentElement.classList.add('dark')
            localStorage.setItem('color-theme', 'dark')
          } else {
            document.documentElement.classList.remove('dark')
            localStorage.setItem('color-theme', 'light')
          }

          // if NOT set via local storage previously
        } else {
          if (document.documentElement.classList.contains('dark')) {
            document.documentElement.classList.remove('dark')
            localStorage.setItem('color-theme', 'light')
          } else {
            document.documentElement.classList.add('dark')
            localStorage.setItem('color-theme', 'dark')
          }
        }
      })
    </script>
  </body>
</html>
