---
import type { PaginateFunction, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'
import { Image } from 'astro:assets'
import { PAGE_SIZE } from '../../../config'
import { getCollection } from 'astro:content'
import Base from '../../../layouts/base.astro'
import PageHero from '../../../components/pagehero.astro'
import BlogRoll from '../../../components/blogroll.astro'
import PaginateControl from '../../../components/paginatecontrol.astro'
import image from '../../../assets/site/banner.jpg'

export interface Props {
  page: Page<CollectionEntry<'blog'>>
}

const { author } = Astro.params
const { page } = Astro.props

const detail = await getEntry('author', author!)

const frontmatter: CollectionEntry<'page'>['data'] = {
  title:
    'Author: ' +
    detail!.data.title +
    (page.size < page.total ? ' (page ' + page.currentPage + ' of ' + page.lastPage + ')' : ''),
  description:
    detail!.data.description +
    '. ' +
    'Showing articles ' +
    (page.start + 1) +
    '-' +
    (page.end + 1) +
    ' (total ' +
    page.total +
    ')',
  image: image
}

const currentPage = Astro.url.pathname.replace(/(\/\d*)?\/$/, '')

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const authors = await getCollection('author')
  const allPosts = await getCollection('blog', (post) => !post.data.draft)
  const posts = allPosts.sort((a, b) =>
    a.data.pubDate && b.data.pubDate ? +b.data.pubDate - +a.data.pubDate : 0
  )

  return authors.flatMap((author) => {
    return paginate(
      posts.filter((post) => post.data.author && post.data.author.id == author.id),
      {
        params: { author: author.id },
        pageSize: PAGE_SIZE
      }
    )
  })
}
---

<Base frontmatter={frontmatter}>
  <header>
    <PageHero title={frontmatter.title!} description={frontmatter.description} {image}>
      <Image
        src={detail!.data.image}
        alt={detail!.data.title}
        class='mt-4 h-32 w-32 rounded-full object-cover object-center'
      />
      <PaginateControl base={currentPage} page={page} />
    </PageHero>
  </header>
  <main class='mt-10 bg-gray-100 dark:bg-gray-900'>
    <BlogRoll posts={page.data} />
  </main>
</Base>
