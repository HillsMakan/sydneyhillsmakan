---
import type { CollectionEntry } from 'astro:content'
import { getCollection, getEntries, render } from 'astro:content'
import Layout from '../layouts/base.astro'
import Breadcrumb from '../components/breadcrumb.astro'
import SubHero from '../components/subhero.astro'
import CategoryList from '../components/categorylist.astro'

export interface Props {
  region: CollectionEntry<'region'>
}

const { region } = Astro.props

const { Content } = await render(region)

export async function getStaticPaths() {
  const regions = await getCollection(
    'region',
    (region) => !region.data.draft && region.data.country!.id == 'international'
  )

  return regions.map((region) => ({
    params: { region: region.id },
    props: { region }
  }))
}
function uniqBy<T>(arr: T[], key: (item: T) => string): T[] {
  const seen = new Set()
  return arr.filter((item) => {
    const k = key(item)
    return !seen.has(k) ? seen.add(k) : false
  })
}
const partners = await getCollection(
  'partner',
  (partner) => !partner.data.draft && partner.data.region.id == region.id
)
const uniquecats = uniqBy(
  partners.flatMap((partner) => partner.data.categories),
  JSON.stringify
)
const categories = await getEntries(uniquecats)
---

<Layout frontmatter={region.data}>
  <main class="h-auto p-4 pt-20 md:ml-64">
    <Breadcrumb links={[{ title: region.data.title, link: '/' + region.id }]} />
    <SubHero frontmatter={region.data} />
    <Content />
    <CategoryList prefix={'/' + region.id + '/'} categories={categories} />
  </main>
</Layout>
