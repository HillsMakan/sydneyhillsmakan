---
import type { CollectionEntry } from 'astro:content'
import { getCollection, render } from 'astro:content'
import Layout from '../../layouts/base.astro'
import Breadcrumb from '../../components/breadcrumb.astro'
import SubHero from '../../components/subhero.astro'
import Cards from '../../components/cards.astro'

export interface Props {
  category: CollectionEntry<'categories'>
}

const { category } = Astro.props

const { Content } = await render(category)

export async function getStaticPaths() {
  const categories = await getCollection('categories', (category) => !category.data.draft)

  return categories.map((category) => ({
    params: { category: category.id },
    props: { category }
  }))
}
const partners = await getCollection(
  'partner',
  (partner) => !partner.data.draft && partner.data.categories.map((p) => p.id).includes(category.id)
)
---

<Layout frontmatter={category.data}>
  <main class="h-auto p-4 pt-20 md:ml-64">
    <Breadcrumb
      links={[
        { title: 'Category', link: '/categories' },
        { title: category.data.title, link: '/categories/' + category.id }
      ]}
    />
    <SubHero frontmatter={category.data} />
    <Content />
    <Cards partners={partners} />
  </main>
</Layout>
